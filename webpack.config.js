/* eslint-disable @typescript-eslint/no-var-requires */
const path = require('path');
const webpack = require('webpack');
const BannerPlugin = webpack.BannerPlugin;

module.exports = (env, argv) => {
  const isProduction = argv.mode === 'production';

  return {
    entry: './src/main.ts',
    target: 'web',
    module: {
      rules: [
        {
          test: /\.ts$/,
          use: 'ts-loader',
          exclude: /node_modules/,
        },
        {
          test: /\.css$/,
          use: ['style-loader', 'css-loader'],
        }
      ],
    },
    resolve: {
      extensions: ['.ts', '.js'],
    },
    externals: {
      obsidian: 'commonjs2 obsidian',
    },
    output: {
      filename: 'main.js',
      path: path.resolve(__dirname, 'dist'),
      libraryTarget: "commonjs",
    },
    plugins: [
      new BannerPlugin({
        banner: `/*
THIS IS A GENERATED/BUNDLED FILE BY WEBPACK
if you want to view the source, please visit the github repository of this plugin
*/`,
        raw: true,
      }),
      new webpack.IgnorePlugin({
        resourceRegExp: /^\.\/locale$/,
        contextRegExp: /moment$/,
      }),
    ],
    optimization: {
      minimize: isProduction,
    },
    devtool: isProduction ? false : 'inline-source-map',
  };
};
